{% extends 'OroUIBundle:actions:update.html.twig' %}
{% form_theme form with ['OroFormBundle:Form:fields.html.twig'] %}
{% import 'OroQueryDesignerBundle::macros.html.twig' as QD %}

{% oro_title_set({params : {"%report.name%": entity.name} }) %}
{% set formAction = form.vars.value.id ? path('oro_report_update', { 'id': form.vars.value.id }) : path('oro_report_create')  %}

{% block head_script %}
    {{ parent() }}

    {% block stylesheets %}
        {{ form_stylesheet(form) }}
    {% endblock %}
{% endblock %}

{% block navButtons %}
    {% if form.vars.value.id and resource_granted('oro_report_delete') %}
        {{ UI.deleteButton({
            'dataUrl': path('oro_api_delete_report', {'id': form.vars.value.id}),
            'dataRedirect': path('oro_report_index'),
            'aCss': 'no-hash remove-button',
            'id': 'btn-remove-report',
            'dataId': form.vars.value.id,
            'entity_label': 'oro.report.entity_label'|trans
        }) }}

        {{ UI.buttonSeparator() }}
    {% endif %}
    {{ UI.button({'path' : path('oro_report_index'), 'title' : 'Cancel'|trans, 'label' : 'Cancel'|trans}) }}
    {{ UI.saveAndStayButton('oro_report_update') }}
    {{ UI.saveAndCloseButton() }}
{% endblock %}

{% block pageHeader %}
    {% if form.vars.value.id %}
        {% set breadcrumbs = {
            'entity':      form.vars.value,
            'indexPath':   path('oro_report_index'),
            'indexLabel': 'oro.report.entity_plural_label'|trans,
            'entityTitle': entity.name
        } %}
        {{ parent() }}
    {% else %}
        {% set title = 'New Report'|trans %}
        {% include 'OroUIBundle::page_title_block.html.twig' %}
    {% endif %}
{% endblock pageHeader %}

{% block content_data %}
    {% set id = 'report-profile' %}
    {% set ownerDataBlock = {
        'dataBlocks': [{
            'subblocks': [{
                'data': []
            }]
        }]
    } %}

    {% set ownerDataBlock = oro_form_process(ownerDataBlock, form) %}
    {% set dataBlocks = [{
            'title': 'General'|trans,
            'class': 'active',
            'subblocks': [
                {
                    'title': '',
                    'data': [
                        form_row(form.name, {'label': 'oro.report.name.label'|trans}),
                        form_row(form.description, {
                            'label': 'oro.report.description.label'|trans,
                            'attr': {
                                'class': 'report-descr'
                            }
                        })
                    ]
                },
                {
                    'title': '',
                    'data': [
                        form_row(form.entity, {'label': 'oro.report.entity.label'|trans}),
                        form_row(form.type, {'label': 'oro.report.type.label'|trans}),
                        ownerDataBlock.dataBlocks[0].subblocks[0].data[0]
                    ]
                }
            ]
        }]
    %}

    {% set dataBlocks = dataBlocks|merge( [{
        'title' : 'oro.report.form.designer'|trans,
        'content_attr': {'class': 'report-designer', 'data-metadata': metadata|json_encode|raw},
        'subblocks': [
            {
                'title': 'oro.report.form.columns'|trans,
                'spanClass': 'report-columns responsive-cell',
                'data': [
                    QD.query_designer_grouping_form(form.grouping, {'id': 'report-grouping-form'}),
                    QD.query_designer_column_form(form.column, {'id': 'report-column-form'}),
                    QD.query_designer_column_list(),
                    QD.query_designer_column_template('report-column-row')
                ]
            },
            {
                'title': 'oro.report.form.filters'|trans,
                'spanClass': 'report-filters responsive-cell',
                'data': [
                    QD.query_designer_filter_form(form.filter, form.filters_logic, {'id': 'report-filter-form'}),
                    QD.query_designer_filter_list(),
                    QD.query_designer_filter_template('report-filter-row')
                ]
            },
        ]
    }] ) %}

    {% set data = {
        'formErrors': form_errors(form)? form_errors(form) : null,
        'dataBlocks': dataBlocks,
        'hiddenData': form_widget(form.definition)
    } %}

    {{ UI.scrollData(id, data, form) }}

    {{ QD.query_designer_column_chain_template('report-column-chain-template') }}

    <script type="text/javascript">
        require(['jquery', 'underscore', 'oro/translator', 'routing', 'oro/query-designer', 'oro/delete-confirmation'],
        function($, _, __, routing, QueryDesigner, DeleteConfirmation) {
            $(function() {
                var entities = {{ entities|json_encode|raw }};
                var entityChoice = $('#oro_report_form_entity');

                var findEntity = function (entityName) {
                    return _.findWhere(entities, {name: entityName});
                };

                var options = {
                    el: '.report-designer',
                    entityName: entityChoice.val(),
                    storageElementSelector: '#oro_report_form_definition',
                    columnChainTemplateSelector: '#report-column-chain-template',
                    fieldsLabel: {{ 'oro.entity.form.entity_fields'|trans|json_encode|raw }},
                    relatedLabel: {{ 'oro.entity.form.entity_related'|trans|json_encode|raw }},
                    findEntity: findEntity,
                    columnsOptions: {
                        el: '.report-columns',
                        groupingFormSelector: '#report-grouping-form',
                        itemTemplateSelector: '#report-column-row',
                        itemFormSelector: '#report-column-form'
                    },
                    filtersOptions: {
                        el: '.report-filters',
                        itemTemplateSelector: '#report-filter-row',
                        itemFormSelector: '#report-filter-form'
                    }
                };
                var designer = new QueryDesigner(options);
                designer.render();

                entityChoice.on('change', function (e) {
                    if (!_.isUndefined(e.removed)) {
                        var prevVal = e.removed.id || '';
                        var newVal = e.val;
                        if (!designer.isEmpty()) {
                            var confirm = new DeleteConfirmation({
                                title: __('Change Entity Confirmation'),
                                okText: __('Yes, I Agree'),
                                content: __('Are you sure you want to change entity?')
                            });
                            confirm.on('ok', function () {
                                designer.changeEntity(newVal);
                            });
                            confirm.on('cancel', function () {
                                entityChoice.val(prevVal);
                                entityChoice.trigger('change');
                            });
                            confirm.open();
                        } else {
                            designer.changeEntity(newVal);
                        }
                    }
                });
            });
        });
    </script>
{% endblock content_data %}
