{% block oro_region_widget %}
    {# // check if block was not included yet #}
    {% set _block = block('oro_region_updater_js') %}
    {% if (_block is empty) %}
        {% include 'OroAddressBundle:Include:javascript.html.twig' %}
        {{ block('oro_region_updater_js')|raw }}
    {% endif %}

    {% if country_field is not defined or country_field is empty %}
        {% set country_field = name|replace({'region': 'country'}) %}
    {% endif %}
    {% set country_field = form.parent[country_field] %}

    {% if region_text_field is not defined or region_text_field is empty %}
        {% set region_text_field = name ~ "_text" %}
    {% endif %}
    {% set region_text_field = form.parent[region_text_field] %}

    {{ form_widget(form) }}
    {% set showSelect = (choices is not empty and region_text_field.vars.value is empty) %}

    <script type="text/javascript">
        require(['jquery', 'oro/region/view', 'oro/region/collection'],
        function($, RegionView, RegionCollection){
            $(function() {
                /** @type oro.region.View */
                new RegionView({
                    el: $('#{{ country_field.vars.id }}'),
                    target: $('#{{ id }}'),
                    simpleEl: $('#{{ region_text_field.vars.id }}'),
                    collection: new RegionCollection(),
                    showSelect: {{ showSelect|json_encode }}
                });
            });
        });
    </script>

    <style type="text/css">
        {% if showSelect %}
            #{{ id }} {
                display: block;
            }

            #{{ region_text_field.vars.id }} {
                display: none;
            }
        {% else %}
            #{{ id }} {
                display: none;
            }

            #{{ region_text_field.vars.id }} {
                display: block;
            }
        {% endif %}
    </style>
{% endblock oro_region_widget %}

{% block oro_email_widget %}
    <div class="email-holder {% if form.email.vars.errors|length > 0 %} validation-error{% endif %}">
        <div class="input-append collection-element-primary">
            {{ form_widget(form.email) }}
            <label class="add-on" title="{{ 'Primary'|trans }}">
                {{ form_widget(form.primary) }}
            </label>
        </div>
        {{ form_errors(form.email) }}
    </div>
    {{ form_rest(form) }}
{%  endblock %}

{% block oro_phone_widget %}
    <div class="email-holder {% if form.phone.vars.errors|length > 0 %} validation-error{% endif %}">
        <div class="input-append collection-element-primary">
            {{ form_widget(form.phone) }}
            <label class="add-on" title="{{ 'Primary'|trans }}">
                {{ form_widget(form.primary) }}
            </label>
        </div>
        {{ form_errors(form.phone) }}
    </div>
    {{ form_rest(form) }}
{%  endblock %}

{% block oro_address_widget %}
    <div {{ block('widget_container_attributes') }}>
        {{ block('oro_address_rows') }}
    </div>
{%  endblock %}

{% block oro_address_rows %}
    {{ form_row(form.id) }}
    {{ form_row(form.label) }}
    {{ form_row(form.namePrefix) }}
    {{ form_row(form.firstName) }}
    {{ form_row(form.middleName) }}
    {{ form_row(form.lastName) }}
    {{ form_row(form.nameSuffix) }}
    {{ form_row(form.organization) }}
    {{ form_row(form.country) }}
    {{ form_row(form.street) }}
    {{ form_row(form.street2) }}
    {{ form_row(form.city) }}
    {{ form_row(form.region_text) }}
    {{ form_row(form.region) }}
    {{ form_row(form.postalCode) }}
    {{ form_rest(form) }}
{%  endblock %}

{% block oro_typed_address_widget %}
    <div {{ block('widget_container_attributes') }}>
        {{ block('oro_typed_address_rows') }}
    </div>
{%  endblock %}

{% block oro_typed_address_rows %}
    {{ form_row(form.types) }}
    {{ form_row(form.primary) }}
    {{ block('oro_address_rows') }}
{%  endblock %}

{% block oro_address_collection_widget %}
    {{ block('oro_collection_widget') }}
    {% set id = id ~ '_collection' %}
    {{ _self.oro_collection_validate_types_js(_context) }}
{% endblock %}

{% macro oro_collection_validate_types_js(context) %}
    {% if context.form.vars.prototype.types is defined %}
        <script type="text/javascript">
            require(['jquery'],
            function($){
                $(function() {
                    var container = $('#{{ context.id }}');
                    /**
                     * Allow only 1 item with selected type
                     */
                    container.on('click', '[name$="[types][]"]', function() {
                        if (this.checked) {
                            container.find('[name$="[types][]"][value="' + this.value + '"]').each(function (idx, el) {
                                el.checked = false;
                            });
                            this.checked = true;
                        }
                    });
                });
            });
        </script>
    {% endif %}
{% endmacro %}
